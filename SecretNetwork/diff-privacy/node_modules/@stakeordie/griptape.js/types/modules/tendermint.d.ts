import BlockchainModule from './base';
import { ModuleBaseResponse, Validator } from './types';
export interface SyncingResponse {
    syncing: boolean;
}
export interface GetLatestBlockResponse {
    block_id: BlockID;
    block: Block;
}
export interface GetBlockByHeightResponse {
    block_id: BlockID;
    block: Block;
}
export interface BlockID {
    hash: string;
    parts: Parts;
}
export interface Parts {
    total: string;
    hash: string;
}
export interface Block {
    header: Header;
    data: Data;
    evidence: Evidence;
    last_commit: LastCommit;
}
export interface Data {
    txs: string;
}
export interface Evidence {
    evidence: string;
}
export interface Header {
    version: Version;
    chain_id: string;
    height: string;
    time: Date;
    last_block_id: BlockID;
    last_commit_hash: string;
    data_hash: string;
    validators_hash: string;
    next_validators_hash: string;
    consensus_hash: string;
    app_hash: string;
    last_results_hash: string;
    evidence_hash: string;
    proposer_address: string;
}
export interface Version {
    block: string;
    app: string;
}
export interface LastCommit {
    height: string;
    round: string;
    block_id: BlockID;
    signatures: Signature[];
}
export interface Signature {
    block_id_flag: number;
    validator_address: string;
    timestamp: Date;
    signature: string;
}
export interface GetLatestValidatorSetResult {
    block_height: string;
    validators: Validator[];
}
export interface GetLatestValidatorSetResponse extends ModuleBaseResponse {
    result: GetLatestValidatorSetResult;
}
export interface GetValidatorSetCertainHeightRequest {
    block_height: string;
    validators: Validator[];
}
export interface GetValidatorSetCertainHeightResponse extends ModuleBaseResponse {
    result: GetValidatorSetCertainHeightRequest;
}
export declare class TendermintModule extends BlockchainModule {
    syncing(): Promise<SyncingResponse>;
    getLatestBlock(): Promise<GetLatestBlockResponse>;
    getBlockByHeight(height: number): Promise<GetBlockByHeightResponse>;
    getLatestValidatorSet(): Promise<GetLatestValidatorSetResponse>;
    getValidatorSetCertainHeight(height: number): Promise<GetValidatorSetCertainHeightResponse>;
}
export declare function useTendermint(): TendermintModule;
