import { AccountData, AminoSignResponse, StdSignDoc } from "./wallet_amino";
export interface EthereumProvider {
    request(args: {
        method: "eth_sign";
        params: [
            (string | [
                {
                    type: "string";
                    name: "Secret Network Transaction";
                    value: string;
                }
            ]),
            string
        ];
    }): Promise<string>;
}
/**
 * MetaMaskSigner is a signer capable of signing on transactions using MetaMask.
 */
export declare class MetaMaskSigner {
    ethProvider: EthereumProvider;
    ethAddress: string;
    publicKey: Uint8Array;
    private constructor();
    static create(ethProvider: EthereumProvider, ethAddress: string): Promise<MetaMaskSigner>;
    getAccounts(): Promise<readonly AccountData[]>;
    signAmino(address: string, signDoc: StdSignDoc): Promise<AminoSignResponse>;
}
//# sourceMappingURL=metamask_signer.d.ts.map